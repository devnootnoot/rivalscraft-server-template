# The main configuration file for UniverseSpigot.

asynchronous:
  tracker:
    # Moves the entity tracker off the main thread.
    # Recommended value: true
    enabled: true
    # Configure the maximum amount of threads for entity tracking
    threads: 2
  pathfinding:
    # Moves the entity pathfinder off the main thread.
    # Recommended value: true
    enabled: true
    # Configure the maximum amount of threads for pathfinding.
    # 0 = available processor / 4.
    threads: 2
  player-saving:
    # Enables Asynchronous Player Data Saving (EXPERIMENTAL).
    # Recommended value: false (threading issues on high connection rate)
    enabled: true
  chunks-sending:
    # Moves the chunk packet sending off the main thread.
    # Recommended value: true
    enabled: true
    # Configure the maximum amount of threads for chunk sending.
    threads: 2
behavior:
  # Defines the required minimum distance from players to be able to spawn entities naturally.
  # Recommended value: 576 (24 blocks) = vanilla
  minimumPlayerDistanceForNaturalSpawning: 576.0
  # Disables Minecraft Chat Signing to prevent player reporting
  # Recommended value: false (wip: popup visible)
  disableChatReporting: true
  # Disables handling nether portal teleportation for all entities.
  disablePortalHandling: false
  # Disables spigots internal activation range logic.
  disableActivationRange: false
  # Disables Entity AI. Acts like Spigot's nerfSpawnerMobs but for all mobs.
  disableEntityAI: false
  # Defines if we should force update tnt positions every tick
  forceUpdateTntPositions: true
  # Disables the warden spawn tracking ticking.
  disableWardenSpawnTracking: false
  # Disables entity water sensitivity. This means entities like blazes won't get damage from water.
  disableEntityWaterSensitivity: false
  # Avoids processing flapping movement game events.
  disableFlappingMovementGameEvent: false
  # Prevents enderpearls from spawning endermites.
  disableEnderPearlSpawningEndermites: false
  # Disables the reinforcement spawn chance for zombies.
  disableZombieReinforcementChance: false
  # Reverts change introduced in CraftBukkit, ensures mechanics like sprinting working properly (Might cause issues with plugins).
  oldSprintStateBehavior: false
  # Disables world data saving, useful for minigame servers.
  disableWorldDataSaving: false
  # Allows the Bukkit API to teleport entities with passengers.
  allowTeleportationWithPassengers: false
  # Disables turtle helmet ticking (Effects won't work).
  disableTurtleHelmetTicking: false
  # Prevents items from spreading too far upon death.
  oldDeathItemDropBehavior: true
  # Disables the item merging check if the item is still moving.
  disableItemMergeCheckWhileMoving: false
  # Skips the death animation for entities.
  enableInstantDeathAnimation: false
  # Reverts food regeneration to 1.8 version.
  revertFoodRegeneration: false
  # Configure speed of furnaces cooking food.
  cookSpeedMultiplier: 1.0
  # Configure speed of brewing stands.
  brewingSpeedMultiplier: 1.0
  # Make entities pushable only by players.
  onlyPlayersPushEntities: false
  # Disables entities taking damage from (wall) suffocation.
  disableEntitySuffocationCheck: false
  # Disables entities taking damage by world border.
  disableEntityWorldBorderDamageCheck: false
  # Disables lava from catching others blocks on fire.
  disableLavaCatchesBlocksOnFire: false
  # Disables leaf decay.
  disableLeafDecay: false
  load-chunks:
    # Specify which entities should load chunks when moving.
    entities:
    - EXAMPLE
  # Disables grass light checks.
  disableGrassLightChecks: true
  # Disables snow light checks.
  disableSnowLightChecks: true
  # Disables spawner light checks.
  disableSpawnerLightChecks: false
  spawner:
    # Configure the spawner minimum spawn delay.
    minSpawnDelay: 200
    # Configure the spawner maximum spawn delay.
    maxSpawnDelay: 800
    # Configure the amount of spawner spawn count.
    spawnCount: 4
    # Configure the maximum amount of nearby entities before cancelling spawners ticking.
    maxNearbyEntities: 6
    # Configure the required player range for spawners to work.
    requiredPlayerRange: 16
    # Configure the maximum position range for spawned entities.
    spawnRange: 4
    # Disables spawner max nearby entities check.
    disableMaxNearbyEntitiesCheck: false
    # Disables spawner checking for nearby players.
    disableNearbyPlayersCheck: false
    # Disables spawner obstruction checks.
    disableObstructionCheck: false
    # Disables spawner water obstruction checks.
    disableWaterPreventSpawnCheck: false
combat:
  # Disables shield effectiveness.
  disableShieldEffectiveness: false
  # Reverts enchanted golden apple effects to 1.8 version.
  oldEnchantedGappleEffects: false
  # Imitates 1.8 sword blocking using shields.
  imitateSwordBlocking: false
  # Reverts armor protection to 1.8 version.
  revertArmorProtection: false
  # Disables Netherite Armor Knockback Resistance
  disableNetheriteKnockbackResistance: false
  # Reverts sharpness buff to 1.8 version.
  oldSharpnessDamageBuff: false
  # Disables criticals if player is sprinting.
  preventCriticalsIfSprinting: true
  # Disables 1.9+ hit delay.
  disableHitDelay: false
  # Enables 1.8 Bow Boosting.
  enableBowBoosting: false
  # This will cause projectiles to have old collision from 1.8.
  oldCollisionsProjectile: false
  # Disables the sweeping edge effect of swords.
  disableSweepingEdge: false
  # This will make fishing hooks knockback entities when struck.
  fishingHooksDoKnockback: false
  # This will make fishing hooks pull entities toward the player when reeling.
  fishingHooksPullEntities: true
  # This will make axe damage to be what it was in 1.8.
  oldAxeDamage: false
  # Configures the amount of damage modifier per critical hit.
  criticalModifier: 1.5
  knockback:
    # This will make knockback to be what it was in 1.8.
    oldKnockback: false
    horizontalExtra: 0.4
    verticalExtra: 0.06
    horizontalFriction: 2.0
    verticalFriction: 2.0
    horizontalModifier: 0.4
    verticalModifier: 0.36
    horizontalAirModifier: 0.6
    verticalAirModifier: 0.8
    horizontalSprintingModifier: 1.0
    verticalSprintingModifier: 1.0
    verticalMax: 0.4
experimental:
  # Disables Piston light updates.
  disablePistonLightUpdates: false
  # Enables the usage of IO Uring if available. Improves networking performance drastically but stability isn't ensured.
  # This option only works without Unix Domain Sockets and disabled compression threshold (-1).
  useIoUring: true
  # Reduces the amount of world data saving calls if they're not required.
  # Recommended value: false (Use at your own risk!)
  optimiseWorldUnloads: false
  # Optimizes player movement by reducing chunk source updates.
  # Recommended value: true
  reducePlayerChunkSourceUpdates: true
  # Reduces chunk mid tick tasks execution.
  # Recommended value: false
  reduceChunkMidTickTaskExecution: true
  # Allows tasks to be executed immediately after the current one has finished.
  useFasterFutureSequencing: true
  # Disables the Paper chunk load version check (This allows, for example, to load chunks from 1.20.2 to 1.20.1).
  disableInternalNewerVersionCheck: false
  # Reduces nearby updates if they're not required. Useful for high player counts
  reduceNearbyUpdates: true
developer:
  # Disables processing of chat session update packet.
  disableChatSessionUpdatePacket: true
misc:
  log-cleaner:
    # Clean old logs inside server's logs folder.
    enabled: false
    # Delete logs older than X days on server startup.
    older-than: 30
    # Retains only X number of log files on server startup.
    # Recommended value: -1 (disabled)
    max-count: -1
fixes:
  # Prevents verifying signed chat for players.
  disableUnsignedChatVerification: true
  # Prevents tracking unacknowledged chat messages to avoid player kicks.
  disableUnacknowledgedChatKick: true
  # Prevents bukkit entity metadata references from growing when a plugin wrongfully handled its creation
  fixEntityMetadataHandling: false
  # Prevents misaligned head yaw for entities.
  resyncHeadYaw: false
  # Prevents players being disconnected by disconnect.spam
  disableDisconnectSpam: false
  # Fixes a potential crash with invalid projectile velocities
  fixInvalidProjectileVelocity: true
  # Uses a faster item matching behavior for shulkers. This prevents big shulkers from crashing players.
  fasterShulkerItemMatching: true
  # Disables saving snowball entities. This patches certain lag machines.
  # Recommended value: true
  disableSavingSnowballs: true
  # Disables saving firework entities. This patches certain lag machines.
  # Recommended value: true
  disableSavingFireworks: true
  # Uses an alternative approach to gather profile data reducing possibility of rate limitation to Mojang.
  alternativeProfileLookup: true
  # Locks the current operator list - prevents new ones from being added.
  lockOpSystem: false
limiters:
  redstone:
    # Enables Redstone Limiter.
    enabled: false
    # Time redstone will be blocked for
    period: 3000
    # Max blocks piston can push
    maxPistonPush: 12
    block-threshold:
      # Global threshold used for non specified redstone components
      GLOBAL: 2
      OBSERVER: 3
  remove-excess:
    # Removes excess minecarts vehicles on collision.
    removeExcessMinecarts: false
    # Removes excess boats vehicles on collision.
    removeExcessBoats: false
    # Configures the limit of minecart per collision before removing them.
    excessMinecartsLimit: 10
    # Configures the limit of boat per collision before removing them.
    excessBoatsLimit: 10
  # Specify which entities should not be ticked.
  non-tickable-entities:
  - ENTITY_TYPE
particles:
  # Disables entity sprinting particles.
  disableSprintParticles: true
  # Disables entity fall particles.
  disableFallParticles: true
  # Disables entity death particles.
  disableDeathParticles: true
  # Disables player block break particles.
  disableBlockBreakParticles: true
  # Disables entity water splash particles.
  disableWaterSplashParticles: true
  # Disables bubble columns particles.
  disableBubbleColumnParticles: true
  # Disables mob spawner particles.
  disableSpawnerParticles: true
  # Disables soul speed particles.
  disableSoulSpeedParticles: true
  # Disables effect particles.
  disableEffectParticles: true
  # Disables new combat particles.
  disableNewCombatParticles: false
sounds:
  # Disables shoulder entity ambient sound.
  disableShoulderEntityAmbientSound: false
  # Disables entity footstep particle.
  disableFootStepSounds: false
  # Disables entity ambient sounds.
  disableAmbientSounds: false
  # Disables entity hurt sounds.
  disableHurtSounds: false
  # Disables new combat sounds.
  disableNewCombatSounds: false
alternative-farms:
  # Enabling this feature allows to use alternative mechanics for different types of farms to improve performance.
  # Recommended value: true
  enabled: false
  world-change:
    # Reduces entity updates for x ticks after dimension switch. Set to -1 to disable.
    reduced-updates:
    - ENTITY_TYPE;100
  golems:
    # Enabling this will kill spawned golems instantaneously after getting fire/lava damage.
    fire-instantaneous-kill: false
  blazes:
    # Enabling this will kill spawned blazes instantaneously after getting water damage.
    water-instantaneous-kill: false
  raids:
    # Enabling this feature allows to reduce raid entity updates.
    enabled: true
    # Reduces raid entity updates for x ticks after being spawned.
    ticks-to-reduce: 100
performance:
  packet-reducer:
    # Enables the packet reducer logic.
    enabled: true
    # Reduces hand swinging updates to reduce overall packet sending count.
    reduceHandSwingUpdates: true
    # Drastically reduces the amount of packets being sent. Can possibly cause visual issues.
    # Recommended value: true
    reduce-packet-sending: true
    # Reduces arm animation packets by only sending them on the configured interval in milliseconds (Might cause pvp visual issues if set too high).
    # Recommended value: -1 (disabled)
    time-between-arm-swing-updates: 2
    # Reuses already known states to reduce overall packet sending.
    reuse-packets: true
    fire-packets:
      # Prevents sending fire packets if entity has fire resistance.
      # Recommended value: true
      enabled: true
      # Exempts invisible entities from fire packet reducing.
      ignore-invisible: false
  # Disabling this feature saves a considerable amount of processing time but will prevent player statistics from increasing.
  disablePlayerStatistics: false
  # Disables block entity ticking such as hoppers, campfires, furnaces...
  disableBlockEntityTicking: false
  # Disabling this feature saves a considerable amount of processing time if you don't use it.
  # Recommended value: true
  disableTickRateManagerFunctionality: true
  # Disables fluid ticking on chunk generation to prevent lag spikes (Might cause weird fluid behavior).
  disableFluidTickingOnChunkGeneration: true
  inventory:
    # Optimises inventory updates by using simpler checks.
    # Recommended value: true
    optimiseInventoryNBTChecks: true
    # Disables handling inventory item nbt checks.
    # Recommended value: false
    disableInventoryNBTChecks: false
    # Disables handling equipment item nbt checks.
    # Recommended value: false
    disableEquipmentNBTChecks: false
  # Uses an extremely faster way to handle raids (Might break some specific vanilla behavior).
  useFasterRaidLogic: true
  # Uses an alternative algorithm to efficiently move entities between dimensions.
  # Recommended value: true
  enableFasterEntityDimensionChange: true
  # Uses faster operations for liquids (Occasionally they wont flow on some corners).
  useFasterLiquidOperations: true
  # Disables the criterion trigger for achievements which can be heavier sometimes (Advancements will not work!).
  # Recommended value: true (causes lazy recipe suggestion updates)
  disableCriterionTrigger: false
  # Disables treasure pathfinder goals for dolphins.
  # Recommended value: false
  disableDolphinTreasureGoal: true
  # Disables the world sky brightness updates which can be heavier on high world counts.
  disableSkyBrightnessUpdates: false
  # Disables the world weather cycle which can be heavier on high player counts.
  disableWeatherCycle: false
  # Uses an optimized behavior for powered rails. Might cause non-vanilla behavior.
  useFasterPoweredRails: true
  # Disables the game event listening for allays.
  # This setting will break the vibration functionality for allays.
  disableAllayGameEventListening: true
  # Disables moist checks for farmlands. This setting will cause farmland to never dry out
  alwaysMoistFarmland: false
  # Disables moist checks for sugarcane. This setting will cause sugarcane to never dry out
  alwaysMoistSugarcane: false
  # Check if cactus can survive before growing
  checkIfCactusCanSurviveBeforeGrowth: true
  hoppers:
    # Optimises hoppers by using faster logic.
    enabled: true
    # Throttles the hopper for the specified amount of ticks if target container is full
    # Recommended value: 2-5
    throttleFullTargetContainer: -1
    # Rewrites hopper search lookups to drastically improve performance.
    # Recommended value: false (might change behavior)
    alternative-search: true
    # Limits the amount of entities checked for hopper operations.
    # Recommended value: 32-64
    max-search-limit: 32
  # Reduces player block lookups for searching a supporting block.
  optimiseSupportingBlockLookup: true
  # Uses faster operations to change the entity custom name.
  optimiseEntityCustomName: false
  # Removes the 1024 entry biome temperature cache hash map because the cache seems to be slow and rarely hit.
  disableBiomeTemperatureCache: true
  # Prevents tile snapshots from being created when using InventoryHolder API (Might cause issues due to breaking original API behavior).
  disableTileSnapshotCreation: false
  # Prevents block snapshots from being created when using BlockState API. Might cause plugin issues (Might cause issues due to breaking original API behavior).
  disableBlockSnapshotCreation: false
  # Disables spawner chunk tick iteration to drastically improve performance in case this feature is not needed.
  disableSpawnerChunkTickIteration: false
  # Disables the vibration system (Used by sculk sensors...) to reduce the amount of updates done per actions.
  disableVibrations: false
  # Only runs unpack loot table for players.
  # Recommended value: true
  onlyPlayersUnpackLootTable: true
  # Optimises player movement by skipping heavy operations.
  # Recommended value: true
  optimisePlayerMovement: true
  # Optimises player pickup (adds pickup delay).
  # Recommended value: false
  optimisePlayerPickup: true
  # Optimises the spawner settings calculation.
  # Recommended value: true
  optimiseSpawnerSettings: true
  # Sanitizes shulker blocks in player hand before sending it to others players
  optimiseShulkerDataSending: true
  # Caches world configurations to get a notable performance boost
  # on servers that constantly loads/unloads worlds. (This option will use the default world configuration and refreshing is not supported).
  # Recommended value: false
  cacheWorldConfigurations: false
  # Disables initial world spawn logic to get a notable performance boost
  # on servers that constantly loads/unloads worlds.
  # Recommended value: false
  disableInitialWorldSpawn: false
  # Optimizes class instancing by using reference equality.
  # This setting can increase the chance of getting an SIGSEGV crash on machines with a physical RAM corrupted.
  # Recommended value: true
  optimiseClassInstancing: true
  # Optimizes fire blocks by reusing known states.
  # Recommended value: true
  optimiseFireBlocks: true
  villager:
    # Defines the radius for villagers searching jobs.
    # Recommended value: 32-48
    acquirePoiSearchRadius: 48
    # Defines the radius for villagers searching nearest beds.
    # Recommended value: 32-48
    nearestBedSensorRadius: 48
  # Disables Bukkit Vanish API.
  disableBukkitVanishAPI: false
  # Uses a faster movement collision calculation.
  # Recommended value: true
  useFasterMovementCollision: true
  # Disables the portal entity collision check to greatly improve performance.
  # This will however, cause teleported entities be able to suffocate.
  disablePortalsCollisionCheck: false
  # Reduces the amount of information tracked by the minecraft server to greatly boost performance.
  reduceInformationTracking: true
  # Nerf certain item entities logic to drastically improve performance.
  nerfItemEntitiesLogic: false
  # Uses faster methods for item entities logic. Might cause issues with plugins.
  useFasterItemMethods: true
  ticking:
    etl:
      # Enables an efficient tick limiter that acts when the server performance is compromised.
      # Recommended value: true
      enabled: true
      # Distributes heavy tasks across ticks to prevent a major performance impact.
      # Recommended value: false
      distribute-tasks-between-ticks: true
      reduce-entity-updates:
        # Reduces entity updates when the server performance is compromised.
        # Recommended value: true
        enabled: true
        # Enabling this setting will always reduce entity updates, ignoring the threshold checks.
        # Recommended value: false
        alwaysReduce: false
    # Disables item frame map ticking.
    # Recommended value: false
    disableItemFrameMapTicking: false
    # Optimizes player ticking by only updating items in hand rather than the entire inventory.
    # Recommended value: true
    onlyTickItemsInHand: false
    entity:
      # Configure the amount of ticks should pass before executing entity collisions.
      # Recommended value: 5
      ticksBetweenCollisions: 5
      # Configure the amount of ticks should pass before checking for entity inside blocks.
      # Recommended value: 1
      ticksBetweenBlockCollisionCheck: 1
      # Configure the amount of ticks should pass before updating entity line of sight.
      # Recommended value: 10
      ticksBetweenLineOfSightUpdate: 10
      # Configure the amount of ticks should pass before checking for entities in water.
      # Recommended value: 4-5
      ticksBetweenWaterChecks: 5
      # Configure the amount of ticks should pass before checking for entities to despawn.
      # Recommended value: 4 - 7
      ticksBetweenDespawnChecks: 7
      # Configure the amount of ticks should pass before executing entity light checks (2 = vanilla).
      # Recommended value: 3-5
      ticksBetweenEntityLightChecks: 5
      # Configure the amount of ticks should pass before entity lava damages.
      # Recommended value: 10-20
      ticksBetweenLavaHurt: 20
      # Configure the amount of ticks should pass before checking for entity equipment changes.
      # Recommended value: 4
      ticksBetweenEquipmentUpdate: 4
      # Configure the amount of ticks should pass before updating fluids on entity eyes.
      # Recommended value: 2
      ticksBetweenFluidOnEyes: 2
      # Configure the amount of ticks should pass before checking for entities suffocation.
      # Recommended value: 1
      ticksBetweenSuffocation: 1
      # Configure the amount of ticks should pass before creating entity paths.
      # Recommended value: 4
      ticksBetweenGeneralPathCreation: 4
      # Configure the amount of ticks should pass before activating entities.
      # Recommended value: 3
      ticksBetweenActivationRangeDelay: 3
    world:
      # Configure the amount of ticks should pass before ticking fluids.
      # Recommended value: 1
      ticksBetweenFluidTicking: 3
      # Configure the amount of ticks should pass before ticking blocks.
      # Recommended value: 1
      ticksBetweenBlockTicking: 1
      # configure the amount of ticks should pass before running block events.
      # Recommended value: 1
      ticksBetweenBlockEvents: 1
      # Configure the amount of ticks should pass before ticking raids.
      # Recommended value: 1
      ticksBetweenRaidTicking: 1
      # Configure the amount of ticks should pass before ticking cactus blocks.
      # Recommended value: 1
      ticksBetweenCactusTicking: 1
      # Configure the amount of ticks should pass before ticking custom spawners.
      # Recommended value: 1
      ticksBetweenCustomSpawnerTicking: 1
      # Configure the amount of ticks should pass before updating certain game rules.
      # Recommended value: 10 - 20
      ticksBetweenGameRuleUpdate: 20
      # Configure the amount of ticks should pass before updating world time.
      # Recommended value: 20
      ticksBetweenTimeUpdate: 20
      # Configure the amount of ticks ticks should pass before updating player statistics.
      # Recommended value: 20
      ticksBetweenStatisticUpdate: 20
      # Configure the amount of ticks should pass before purging stale tickets.
      # Recommended value: 5
      ticksBetweenPurgeStaleTickets: 5
      # Configure the amount of ticks should pass before searching moving items to merge (2 = vanilla).
      # Recommended value: 2
      ticksBetweenMovingItemMergeSearch: 2
      # Configure the amount of ticks should pass before searching static items to merge (40 = vanilla).
      # Recommended value: 40
      ticksBetweenStaticItemMergeSearch: 40
      # Configure the amount of ticks should pass before handling item movement stuck.
      # Recommended value: 2
      ticksBetweenItemStuck: 2
      # Configure the amount of ticks should pass before updating chunk precipitation.
      # Recommended value: 2-5
      ticksBetweenPrecipitationUpdates: 5
      # Configure the amount of ticks should pass before updating chunks.
      # Recommended value: 1
      ticksBetweenChunkUpdate: 1
world-format:
  # Configure the world region format type (ANVIL / LINEAR).
  # You can know more about the LINEAR format here: https://github.com/xymb-endcrystalme/LinearRegionFileFormatTools/
  worldFormat: ANVIL
  linear:
    # Determines if we should crash on broken system link when using LINEAR world format.
    crashOnBrokenSymLink: true
    # Configure the LINEAR world format compression level (1-23) with 1 being the FASTEST.
    compressionLevel: 1
    # Configure the LINEAR world format flush frequency in seconds.
    flushFrequency: 10
    # Configure the amount of threads used for flushing in LINEAR world format.
    threads: 1
